import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, WebAppInfo
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
import random
import asyncio

API_TOKEN = '7912812196:AAGu9YWhQ0W7KMYjgTbPOqkVT4X3pwkAwc4'  # –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –±–ª—é–¥ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏, –æ–ø–∏—Å–∞–Ω–∏–µ–º, –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è, —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç—ã –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã
meals = [
    # –ó–∞–∫—É—Å–∫–∏
    {"name": "üçï –ü–∏—Ü—Ü–∞", 
     "category": "–ó–∞–∫—É—Å–∫–∏", 
     "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å —Ö—Ä—É—Å—Ç—è—â–µ–π –∫–æ—Ä–æ—á–∫–æ–π, —Å–æ—á–Ω—ã–º —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º, —Ä–∞—Å–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–º —Å—ã—Ä–æ–º –∏ —Å–≤–µ–∂–∏–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏. –ò–¥–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –≤–∫—É—Å–Ω–æ–≥–æ –æ–±–µ–¥–∞ –∏–ª–∏ —É–∂–∏–Ω–∞.", 
     "time": 40, 
     "ingredients": ["—Ç–µ—Å—Ç–æ", "—Å—ã—Ä", "–ø–æ–º–∏–¥–æ—Ä—ã"], 
     "recipe_link": "https://example.com/pizza", 
     "restaurant_link": "https://pizzahut.com/pizza"},
    
    {"name": "üç£ –†–æ–ª–ª—ã", 
     "category": "–ó–∞–∫—É—Å–∫–∏", 
     "description": "–ù–µ–∂–Ω—ã–µ —è–ø–æ–Ω—Å–∫–∏–µ —Ä–æ–ª–ª—ã —Å —Ä–∏—Å–æ–º, —Å–≤–µ–∂–µ–π —Ä—ã–±–æ–π –∏ –º–æ—Ä—Å–∫–∏–º–∏ –≤–æ–¥–æ—Ä–æ—Å–ª—è–º–∏. –≠—Ç–æ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Å–≤–µ–∂–µ—Å—Ç–∏ –∏ –≤–∫—É—Å–∞, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∫–æ—Ä–∏—Ç –≤–∞—à–µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≥—É—Ä–º–∞–Ω–∞.", 
     "time": 50, 
     "ingredients": ["—Ä–∏—Å", "—Ä—ã–±–∞", "–≤–æ–¥–æ—Ä–æ—Å–ª–∏"], 
     "recipe_link": "https://example.com/rolls", 
     "restaurant_link": "https://restaurant.com/rolls"},
    
    # –°–∞–ª–∞—Ç—ã
    {"name": "ü•ó –°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å", 
     "category": "–°–∞–ª–∞—Ç—ã", 
     "description": "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å–∞–ª–∞—Ç —Å —Ö—Ä—É—Å—Ç—è—â–∏–º–∏ –ª–∏—Å—Ç—å—è–º–∏ —Å–∞–ª–∞—Ç–∞, –Ω–µ–∂–Ω–æ–π –∫—É—Ä–∏—Ü–µ–π, –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–º–∏ –≥—Ä–µ–Ω–∫–∞–º–∏ –∏ –ø–∏–∫–∞–Ω—Ç–Ω—ã–º —Å–æ—É—Å–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–º–µ–∑–∞–Ω–∞. –õ–µ–≥–∫–∏–π –∏ —Å—ã—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ª—é–±–æ–≥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏.", 
     "time": 20, 
     "ingredients": ["–∫—É—Ä–∏—Ü–∞", "–ª–∏—Å—Ç—å—è —Å–∞–ª–∞—Ç–∞", "—Å—ã—Ä"], 
     "recipe_link": "https://example.com/caesar-salad", 
     "restaurant_link": "https://olivegarden.com/caesar-salad"},
    
    {"name": "ü•î –û–ª–∏–≤—å–µ", 
     "category": "–°–∞–ª–∞—Ç—ã", 
     "description": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —Å–∞–ª–∞—Ç —Å –æ—Ç–≤–∞—Ä–Ω—ã–º –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º, –º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –æ–≥—É—Ä—Ü–∞–º–∏, –∫–æ–ª–±–∞—Å–æ–π –∏ –º–∞–π–æ–Ω–µ–∑–æ–º. –ö–ª–∞—Å—Å–∏–∫–∞ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ —Å—Ç–æ–ª–∞, –ª—é–±–∏–º–∞—è –º–Ω–æ–≥–∏–º–∏ —Å –¥–µ—Ç—Å—Ç–≤–∞.", 
     "time": 35, 
     "ingredients": ["–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å", "–∫–æ–ª–±–∞—Å–∞", "–æ–≥—É—Ä—Ü—ã"], 
     "recipe_link": "https://example.com/olivier", 
     "restaurant_link": "https://restaurant.com/olivier"},
    
    # –°—É–ø—ã
    {"name": "üç≤ –ë–æ—Ä—â", 
     "category": "–°—É–ø—ã", 
     "description": "–ù–∞—Å—ã—â–µ–Ω–Ω—ã–π –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–π –±–æ—Ä—â –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–≤–µ–∫–ª—ã, –∫–∞–ø—É—Å—Ç—ã –∏ –º—è—Å–∞. –≠—Ç–æ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –±–ª—é–¥–æ —Å–æ–≥—Ä–µ–µ—Ç –∏ –ø–æ–¥–∞—Ä–∏—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –≤–∫—É—Å –Ω–∞—Å—Ç–æ—è—â–µ–π —Ä—É—Å—Å–∫–æ–π –∫—É—Ö–Ω–∏.", 
     "time": 90, 
     "ingredients": ["—Å–≤–µ–∫–ª–∞", "–∫–∞–ø—É—Å—Ç–∞", "–º—è—Å–æ"], 
     "recipe_link": "https://example.com/borshch", 
     "restaurant_link": "https://restaurant.com/borshch"},
    
    {"name": "üçú –ö—É—Ä–∏–Ω–Ω—ã–π —Å—É–ø", 
     "category": "–°—É–ø—ã", 
     "description": "–õ–µ–≥–∫–∏–π –∏ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –∫—É—Ä–∏–Ω—ã–π —Å—É–ø —Å –æ–≤–æ—â–∞–º–∏. –ü—Ä–æ—Å—Ç–æ–µ –∏ –ø–æ–ª–µ–∑–Ω–æ–µ –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª–µ–≥–∫–æ–≥–æ –æ–±–µ–¥–∞ –∏–ª–∏ —É–∂–∏–Ω–∞.", 
     "time": 30, 
     "ingredients": ["–∫—É—Ä–∏—Ü–∞", "–º–æ—Ä–∫–æ–≤—å", "–ª—É–∫"], 
     "recipe_link": "https://example.com/soup", 
     "restaurant_link": "https://restaurant.com/soup"},
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞
    {"name": "üçù –ü–∞—Å—Ç–∞", 
     "category": "–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞", 
     "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –ø–∞—Å—Ç–∞ —Å —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º –∏ —Ä–∞—Å–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–º —Å—ã—Ä–æ–º. –ò–¥–µ–∞–ª—å–Ω–æ–µ –±–ª—é–¥–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç –ø—Ä–æ—Å—Ç—É—é, –Ω–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –≤–∫—É—Å–Ω—É—é —Å—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—Å–∫—É—é –∫—É—Ö–Ω—é.", 
     "time": 25, 
     "ingredients": ["–ø–∞—Å—Ç–∞", "—Ç–æ–º–∞—Ç—ã", "—Å—ã—Ä"], 
     "recipe_link": "https://example.com/pasta", 
     "restaurant_link": "https://restaurant.com/pasta"},
    
    {"name": "ü•© –°—Ç–µ–π–∫", 
     "category": "–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞", 
     "description": "–°–æ—á–Ω—ã–π –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–π —Å—Ç–µ–π–∫, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –¥–æ –∏–¥–µ–∞–ª—å–Ω–æ–π —Å—Ç–µ–ø–µ–Ω–∏ –ø—Ä–æ–∂–∞—Ä–∫–∏. –î–ª—è –∏—Å—Ç–∏–Ω–Ω—ã—Ö —Ü–µ–Ω–∏—Ç–µ–ª–µ–π –º—è—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±–æ—è—Ç—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –≤–∫—É—Å–æ–º.", 
     "time": 60, 
     "ingredients": ["–º—è—Å–æ", "—Å–ø–µ—Ü–∏–∏"], 
     "recipe_link": "https://example.com/steak", 
     "restaurant_link": "https://restaurant.com/steak"},
    
    # –î–µ—Å–µ—Ä—Ç—ã
    {"name": "ü•û –ë–ª–∏–Ω—á–∏–∫–∏", 
     "category": "–î–µ—Å–µ—Ä—Ç—ã", 
     "description": "–¢–æ–Ω–∫–∏–µ, –Ω–µ–∂–Ω—ã–µ –±–ª–∏–Ω—á–∏–∫–∏ —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –Ω–∞—á–∏–Ω–∫–∞–º–∏. –ü—Ä–æ—Å—Ç–æ–π –∏ –≤–∫—É—Å–Ω—ã–π –¥–µ—Å–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫ –∏–ª–∏ –ø–æ–¥–∞—Ç—å –∫ —á–∞—é.", 
     "time": 30, 
     "ingredients": ["–º–æ–ª–æ–∫–æ", "–º—É–∫–∞", "—è–π—Ü–∞"], 
     "recipe_link": "https://example.com/pancakes", 
     "restaurant_link": "https://restaurant.com/pancakes"},
    
    {"name": "üç∞ –¢–æ—Ä—Ç –ù–∞–ø–æ–ª–µ–æ–Ω", 
     "category": "–î–µ—Å–µ—Ä—Ç—ã", 
     "description": "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Ç–æ—Ä—Ç –ù–∞–ø–æ–ª–µ–æ–Ω –∏–∑ —Å–ª–æ–µ–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å –Ω–µ–∂–Ω—ã–º –∫—Ä–µ–º–æ–º. –ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π –¥–µ—Å–µ—Ä—Ç –¥–ª—è —Å–ª–∞–¥–∫–æ–µ–∂–µ–∫ –∏ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≥—É—Ä–º–∞–Ω–æ–≤.", 
     "time": 120, 
     "ingredients": ["–º—É–∫–∞", "–º–∞—Å–ª–æ", "—Å–∞—Ö–∞—Ä"], 
     "recipe_link": "https://example.com/napoleon-cake", 
     "restaurant_link": "https://restaurant.com/napoleon-cake"},
    
    # –ù–∞–ø–∏—Ç–∫–∏
    {"name": "‚òï –ö–æ—Ñ–µ", 
     "category": "–ù–∞–ø–∏—Ç–∫–∏", 
     "description": "–ö–æ—Ñ–µ ‚Äî –±–æ–¥—Ä—è—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä—è–∂–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –¥–∞—Ä–∏—Ç –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ —Å –∫–∞–∂–¥–æ–π —á–∞—à–∫–æ–π. –ò–¥–µ–∞–ª—å–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–Ω—è –∏–ª–∏ –ø–µ—Ä–µ—Ä—ã–≤–∞.", 
     "time": 5, 
     "ingredients": ["–∫–æ—Ñ–µ"], 
     "recipe_link": "https://example.com/coffee", 
     "restaurant_link": "https://starbucks.com/coffee"},
    
    {"name": "üçπ –°–º—É–∑–∏", 
     "category": "–ù–∞–ø–∏—Ç–∫–∏", 
     "description": "–û—Å–≤–µ–∂–∞—é—â–∏–π —Å–º—É–∑–∏ –∏–∑ —Å–≤–µ–∂–∏—Ö —Ñ—Ä—É–∫—Ç–æ–≤ –∏ –π–æ–≥—É—Ä—Ç–∞. –õ–µ–≥–∫–∏–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Ä–∏—Ç –æ—â—É—â–µ–Ω–∏–µ —Å–≤–µ–∂–µ—Å—Ç–∏ –∏ –ø—Ä–∏–ª–∏–≤ —ç–Ω–µ—Ä–≥–∏–∏.", 
     "time": 10, 
     "ingredients": ["—Ñ—Ä—É–∫—Ç—ã", "–π–æ–≥—É—Ä—Ç"], 
     "recipe_link": "https://example.com/smoothie", 
     "restaurant_link": "https://restaurant.com/smoothie"},
]

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥
categories = ["–ó–∞–∫—É—Å–∫–∏", "–°–∞–ª–∞—Ç—ã", "–°—É–ø—ã", "–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞", "–î–µ—Å–µ—Ä—Ç—ã", "–ù–∞–ø–∏—Ç–∫–∏"]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
def create_category_keyboard():
    keyboard = ReplyKeyboardBuilder()
    keyboard.add(KeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ"))
    keyboard.add(KeyboardButton(text="üìÖ –°–ª—É—á–∞–π–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å"))  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–µ–Ω—é
    for category in categories:
        keyboard.add(KeyboardButton(text=category))
    keyboard.add(KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º"))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º
    return keyboard.as_markup(resize_keyboard=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –±–ª—é–¥–∞–º–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def create_meal_keyboard(category):
    keyboard = ReplyKeyboardBuilder()
    for meal in meals:
        if meal["category"] == category:
            keyboard.add(KeyboardButton(text=meal["name"]))
    keyboard.add(KeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"))  
    return keyboard.as_markup(resize_keyboard=True)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command(commands=['start']))
async def send_welcome(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –≤—ã–±–æ—Ä—É –±–ª—é–¥! üçΩ –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π —Å–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ. "
        "–¢—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å.",
        reply_markup=create_category_keyboard()
    )

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.message(lambda message: message.text in categories)
async def choose_category(message: types.Message):
    category = message.text
    if category == "–ù–∞–ø–∏—Ç–∫–∏":
        await message.answer(
            f"–¢—ã –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –Ω–∞–ø–∏—Ç–æ–∫:",
            reply_markup=create_meal_keyboard(category)
        )
    else:
        await message.answer(
            f"–¢—ã –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –±–ª—é–¥–æ:",
            reply_markup=create_meal_keyboard(category)
        )

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ
@dp.message(lambda message: message.text == "üé≤ –°–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ")
async def random_meal(message: types.Message):
    random_meal = random.choice(meals)
    
    inline_kb = InlineKeyboardBuilder()
    inline_kb.add(InlineKeyboardButton(text="üìñ –†–µ—Ü–µ–ø—Ç", web_app=WebAppInfo(url=random_meal["recipe_link"])))
    inline_kb.add(InlineKeyboardButton(text="üç¥ –ì–¥–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?", web_app=WebAppInfo(url=random_meal["restaurant_link"])))

    await message.answer(
        f"–ü–æ–ø—Ä–æ–±—É–π —ç—Ç–æ —Å–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ: {random_meal['name']}!\n\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {random_meal['description']}\n\n"
        f"–ù–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç –∏–ª–∏ –º–µ—Å—Ç–æ, –≥–¥–µ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —ç—Ç–æ –±–ª—é–¥–æ!",
        reply_markup=inline_kb.as_markup()
    )

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å
@dp.message(lambda message: message.text == "üìÖ –°–ª—É—á–∞–π–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å")
async def random_daily_menu(message: types.Message):
    breakfast = random.choice(meals)
    lunch = random.choice(meals)
    dinner = random.choice(meals)

    response = (
        f"–¢–≤–æ—ë —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å:\n\n"
        f"üçΩ –ó–∞–≤—Ç—Ä–∞–∫: {breakfast['name']} (–≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {breakfast['time']} –º–∏–Ω—É—Ç)\n"
        f"üçΩ –û–±–µ–¥: {lunch['name']} (–≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {lunch['time']} –º–∏–Ω—É—Ç)\n"
        f"üçΩ –£–∂–∏–Ω: {dinner['name']} (–≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {dinner['time']} –º–∏–Ω—É—Ç)\n"
    )

    await message.answer(response)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –±–ª—é–¥–∞
@dp.message(lambda message: any(meal["name"] == message.text for meal in meals))
async def show_meal_details(message: types.Message):
    chosen_meal = next(meal for meal in meals if meal["name"] == message.text)
    
    inline_kb = InlineKeyboardBuilder()
    inline_kb.add(InlineKeyboardButton(text="üìñ –†–µ—Ü–µ–ø—Ç", web_app=WebAppInfo(url=chosen_meal["recipe_link"])))
    inline_kb.add(InlineKeyboardButton(text="üç¥ –ì–¥–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?", web_app=WebAppInfo(url=chosen_meal["restaurant_link"])))

    await message.answer(
        f"–¢—ã –≤—ã–±—Ä–∞–ª {chosen_meal['name']}.\n\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {chosen_meal['description']}\n\n"
        f"–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {chosen_meal['time']} –º–∏–Ω—É—Ç\n\n"
        f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {', '.join(chosen_meal['ingredients'])}\n\n"
        f"–ù–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç –∏–ª–∏ –º–µ—Å—Ç–æ, –≥–¥–µ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —ç—Ç–æ –±–ª—é–¥–æ!",
        reply_markup=inline_kb.as_markup()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
@dp.message(lambda message: message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
async def back_to_categories(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=create_category_keyboard())
     
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
